openapi: 3.0.1
info:
  title: PackageDelivery.API
  version: '1.0'
paths:
  /api/AcceptedShipRequest:
    get:
      tags:
        - AcceptedShipRequest
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcceptedShippingRequestDto'
    post:
      tags:
        - AcceptedShipRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
    put:
      tags:
        - AcceptedShipRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptedShippingRequestDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
  /api/AcceptedShipRequest/{id}:
    get:
      tags:
        - AcceptedShipRequest
      operationId: GetAcceptedShipRequestById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - AcceptedShipRequest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
  /api/AcceptedShipRequest/employee/{employeeid}:
    get:
      tags:
        - AcceptedShipRequest
      operationId: GetAcceptedShipRequestByEmployeeId
      parameters:
        - name: employeeid
          in: path
          required: true
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AcceptedShippingRequestDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Vehicle:
    get:
      tags:
        - Vehicle
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
    post:
      tags:
        - Vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
    put:
      tags:
        - Vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
  /api/Vehicle/{id}:
    get:
      tags:
        - Vehicle
      operationId: GetVehicleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Vehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
  /api/VehicleUsage:
    get:
      tags:
        - VehicleUsage
      parameters:
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleUsageDto'
    post:
      tags:
        - VehicleUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
    put:
      tags:
        - VehicleUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewVehicleUsageDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
  /api/VehicleUsage/employee/{employeeid}:
    get:
      tags:
        - VehicleUsage
      operationId: GetVehicleUsageByEmployeeId
      parameters:
        - name: employeeid
          in: path
          required: true
          schema:
            type: string
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/VehicleUsage/{id}:
    get:
      tags:
        - VehicleUsage
      operationId: GetVehicleUsageById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - VehicleUsage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleUsageDto'
components:
  schemas:
    AcceptedShippingRequestDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employeeId:
          type: string
          nullable: true
        shipping:
          $ref: '#/components/schemas/ShippingRequestDto'
        isAllPackageTaken:
          type: boolean
        readPackageIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AddressDto:
      type: object
      properties:
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipCode:
          type: integer
          format: int32
        country:
          type: string
          nullable: true
      additionalProperties: false
    BillingDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        totalDistance:
          type: number
          format: double
        totalAmount:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/CurrencyDto'
      additionalProperties: false
    CurrencyDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    NewVehicleUsageDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employeeId:
          type: string
          nullable: true
        vehicleId:
          type: string
          nullable: true
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        note:
          type: string
          nullable: true
      additionalProperties: false
    PackageDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        sizeX:
          type: number
          format: double
        sizeY:
          type: number
          format: double
        sizeZ:
          type: number
          format: double
        weight:
          type: number
          format: double
        isFragile:
          type: boolean
        shippingRequestId:
          type: string
          nullable: true
      additionalProperties: false
    PaymentOptionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ShippingOptionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    ShippingRequestDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        courierId:
          type: string
          nullable: true
        addressFrom:
          $ref: '#/components/schemas/AddressDto'
        addressTo:
          $ref: '#/components/schemas/AddressDto'
        isExpress:
          type: boolean
        isFinished:
          type: boolean
        status:
          $ref: '#/components/schemas/Status'
        paymentOption:
          $ref: '#/components/schemas/PaymentOptionDto'
        shippingOption:
          $ref: '#/components/schemas/ShippingOptionDto'
        billing:
          $ref: '#/components/schemas/BillingDto'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageDto'
          nullable: true
      additionalProperties: false
    Status:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    VehicleDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        year:
          type: integer
          format: int32
        technicalInspectionExpirationDate:
          type: string
          format: date-time
        seatingCapacity:
          type: integer
          format: int32
        maxInternalSpaceX:
          type: number
          format: double
        maxInternalSpaceY:
          type: number
          format: double
        maxInternalSpaceZ:
          type: number
          format: double
      additionalProperties: false
    VehicleUsageDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employeeId:
          type: string
          nullable: true
        vehicle:
          $ref: '#/components/schemas/VehicleDto'
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        note:
          type: string
          nullable: true
      additionalProperties: false
